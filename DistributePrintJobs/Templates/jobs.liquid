{% extends "base" %}
{% block title %}Druckjobs{% endblock %}
{% block heading %}Druckjobs{% endblock %}
{% block addhead %}
<script type="text/javascript" src="/static/mootools-core-1.5.0-full-nocompat.js"></script>
<script type="text/javascript">
  function sendJobToPrinter(jobID, printerID)
  {
    new Request.JSON({
      url: '/dojob',
      onSuccess: function (response) {
        if (response.status == 'success') {
          window.location.reload();
        } else if (response.status == 'error') {
          document.id('error').set('text', response.error);
        }
      }
    }).post({ 'do': 'sendJobToPrinter', 'jobID': jobID, 'printerID': printerID });
  }

  function removeJob(jobID)
  {
    new Request.JSON({
      url: '/dojob',
      onSuccess: function (response) {
        if (response.status == 'success') {
          window.location.reload();
        } else if (response.status == 'error') {
          document.id('error').set('text', response.error);
        }
      }
    }).post({ 'do': 'removeJob', 'jobID': jobID });
  }

  function resetJob(jobID)
  {
    new Request.JSON({
      url: '/dojob',
      onSuccess: function (response) {
        if (response.status == 'success') {
          window.location.reload();
        } else if (response.status == 'error') {
          document.id('error').set('text', response.error);
        }
      }
    }).post({ 'do': 'resetJob', 'jobID': jobID });
  }

  function deleteSentJobsOlderThanMinutes(minutes)
  {
    new Request.JSON({
      url: '/deletesentjobs',
      onSuccess: function (response) {
        if (response.status == 'success') {
          window.location.reload();
        } else if (response.status == 'error') {
          document.id('error').set('text', response.error);
        }
      }
    }).post({ 'minutes': minutes });
  }

  function autobalanceDistribute()
  {
    var jobsToSubmit = [];
    $$('.autobalancecheckbox').each(function (cbox) {
      if (cbox.get('checked')) {
        jobsToSubmit.push(cbox.get('value'));
      }
    });
    if (jobsToSubmit.length == 0)
    {
      return;
    }
    var jobString = jobsToSubmit.join(',');

    new Request.JSON({
      url: '/autobalancemultiple',
      onSuccess: function (response) {
        if (response.status == 'success') {
          window.location.reload();
        } else if (response.status == 'error') {
          document.id('error').set('text', response.error);
        }
      }
    }).post({ 'jobIDs': jobString });
  }

  function disableAutoRefresh()
  {
    document.id('autorefreshcheckbox').set('checked', false);
  }

  function maybeRefresh()
  {
    if (document.id('autorefreshcheckbox').get('checked'))
    {
      window.location.reload();
    }
    else
    {
      window.setTimeout('maybeRefresh()', 5000);
    }
  }

  /*
  function autobalanceCellClicked(jobID)
  {
    var checkbox = document.id('autobalancejob' + jobID);
    checkbox.set('checked', !checkbox.get('checked'));
    disableAutoRefresh();
  }
  */

  window.addEvent('domready', function() {
    document.id('autorefreshcheckbox').set('checked', true);
    $$('.autobalancecheckbox').each(function (cb) {
      cb.set('checked', false);
    });
    window.setTimeout('maybeRefresh()', 5000);
  });
</script>
{% endblock %}
{% block content %}
<p class="error"></p>
<p class="topinfo">
  <span class="stats">
    Zurzeit gesendet: {{ printer_statistics | escape }}
  </span>
  &#10033;<wbr/>
  <span class="deleteline">
    Druckaufträge löschen, die gesendet wurden und älter als
    {% for delete_time in delete_times %}
    <button class="deleteold" type="button" onclick="deleteSentJobsOlderThanMinutes({{ delete_time | escape }})">{{ delete_time | escape }}</button>
    {% endfor %}
    Minuten sind
  </span>
  &#10033;<wbr/>
  <span class="autorefreshsettings">
    <input type="checkbox" id="autorefreshcheckbox" checked="checked" />
    <label for="autorefreshcheckbox">Seite automatisch neu laden</label>
  </span>
</p>
<table>
  <thead>
    <tr>
      <th>Datum/Uhrzeit</th>
      <th>User</th>
      <th>Dateiname</th>
      <!-- <th>Name der Datendatei</th> -->
      <th>Gr&ouml;&szlig;e</th>
      <!-- <th>Rechner</th> -->
      <th colspan="2">Aktionen</th>
      <th>autom.<wbr/> Verteilung</th>
    </tr>
  </thead>
  <tbody>
    {% for job in jobs %}
    <tr>
      <td class="arrivaltime">{{ job.time_of_arrival | escape }}</td>
      <td class="username">{{ job.user_name | escape }}</td>
      <td class="docname">{{ job.document_name | escape | filename_break_opportunities }}</td>
      <!-- <td class="datafilename">{{ job.data_file_name | escape }}</td> -->
      <td class="jobsize">{{ job.data_file_size | escape }}</td>
      <!-- <td class="hostname">{{ job.host_name | escape }}</td> -->
      <td class="jobstatus">
        {{ job.status_string }}
        {% if job.status_code == 1 %}
          {% for printer in printers %}
        <button class="sendtoprinter" type="button" onclick="sendJobToPrinter({{ job.job_id }}, {{ printer.printer_id }})">&#8594; {{ printer.short_name | escape }}</button>
          {% endfor %}
        {% elsif job.status_code == 2 %}
        gesendet an <em>{{ job.target_printer_short_name | escape }}</em>
        {% elsif job.status_code == 3 %}
        wird gleich an <em>{{ job.target_printer_short_name | escape }}</em> gesendet
        {% elsif job.status_code == 4 %}
        wird gerade an <em>{{ job.target_printer_short_name | escape }}</em> gesendet
        {% elsif job.status_code == 5 %}
        Senden an <em>{{ job.target_printer_short_name | escape }}</em> schlug fehl
        {% else %}
        ???
        {% endif %}
        {% if job.is_status_resettable %}
        <button class="resetjob" type="button" onclick="resetJob({{ job.job_id }})">&#10227;</button>
        {% endif %}
      </td>
      <td class="removejob">
        <button class="remove" type="button" onclick="removeJob({{ job.job_id }})">&#10006;</button>
      </td>
      <td class="autobalancejob">
        <input type="checkbox" id="autobalancejob{{ job.job_id }}" class="autobalancecheckbox" value="{{ job.job_id }}" onclick="disableAutoRefresh()" />
      </td>
    </tr>
    {% endfor %}
    <tr>
      <td></td>
      <td></td>
      <td></td>
      <!-- <td></td> -->
      <td></td>
      <!-- <td></td> -->
      <td></td>
      <td></td>
      <td><button class="autobalance" type="button" onclick="autobalanceDistribute()">verteilen</button></td>
    </tr>
  </tbody>
</table>
{% endblock %}
